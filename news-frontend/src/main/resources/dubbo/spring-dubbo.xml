<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd        
						http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

	<bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:comm/config/dubbo.properties</value>
			</list>
		</property>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>

	<!-- 提供方应用信息，用于计算依赖关系 -->
	<dubbo:application name="${dubbo.application.frontend.name}" />

	<!-- 使用zookeeper注册中心暴露服务地址 -->
	<dubbo:registry  protocol="zookeeper"  address="${dubbo.registry}" />

	<!-- dubbo协议：用dubbo协议在20880端口暴露服务,不能与tomcat的http端口一样，否则会暴端口冲突 -->
	<dubbo:protocol name="dubbo" port="${dubbo.protocol.frontend.port}" />
	
	<!-- 消费者:check=false表示启动时不检测依赖服务是否存在 -->
	<dubbo:consumer check="false" timeout="10000" />
	
	<!-- 服务提供者 -->
	<dubbo:provider delay="-1" timeout="10000" />

	<dubbo:monitor protocol="registry"/>
	<import resource="spring-dubbo-consumer.xml"/>
</beans>