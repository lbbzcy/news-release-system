<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.news.frontend"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- <mvc:interceptors> <mvc:interceptor> 防止重复提交的地址 <mvc:mapping path="/account/base/editalias/edit.html"/> 
		<mvc:mapping path="/account/base/editemail/sendmail.html"/> <mvc:mapping 
		path="/account/base/editmobile/sendemail.html"/> <mvc:mapping path="/portal/account/base/addmobile/add.html"/> 
		<mvc:mapping path="/account/pwdreset/sendemail.html"/> <mvc:mapping path="/account/base/password/editpasswordfinish.html"/> 
		<mvc:mapping path="/account/info/person/edit.html"/> <mvc:mapping path="/account/info/organ/edit.html"/> 
		防止重复提交的拦截处理器 <bean class="com.ylink.inetpay.portal.shie.web.interceptor.TokenInterceptor"/> 
		</mvc:interceptor> TODO定义拦截器，目前使用在开发者拦截器，上线可以删除掉 <bean class="com.ylink.inetpay.portal.shie.web.interceptor.DeveloperInterceptor"/> 
		登录的用户不存在账户信息时，输入非法地址拦截处理器 <bean class="com.ylink.inetpay.portal.shie.web.interceptor.HasAccountInterceptor"/> 
		</mvc:interceptors> -->
	<!--4.2使用 -->
	<mvc:annotation-driven />
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="favorPathExtension" value="true" />
		<property name="favorParameter" value="true" />
		<property name="ignoreAcceptHeader" value="true" />
		<property name="defaultContentType" value="text/html" />
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="htm" value="text/htm" />
				<entry key="file" value="application/octet-stream" />
				<entry key="image" value="image/*" />
			</map>
		</property>
	</bean>

	<!-- json对象转换器 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- <bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<util:list>
				<bean class="org.springframework.http.MediaType">
					<constructor-arg index="0" value="application" />
					<constructor-arg index="1" value="json" />
					<constructor-arg index="2" value="UTF-8" />
				</bean>
				<bean class="org.springframework.http.MediaType">
					<constructor-arg index="0" value="text" />
					<constructor-arg index="1" value="*" />
					<constructor-arg index="2" value="UTF-8" />
				</bean>
			</util:list>
		</property>
	</bean> -->


	<!-- 根据客户端的不同的请求决定不同的view进行响应 -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager" ref="contentNegotiationManager" />
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
			</list>
		</property>
	</bean>


	<bean id="freemarkerConfiguration"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="location" value="classpath:freemarker/freemarker.properties" />
	</bean>
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="freemarkerSettings" ref="freemarkerConfiguration"></property>
		<property name="templateLoaderPath" value="/WEB-INF/views/" />
	</bean>

	<!-- freemaker 试图支持 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="cache" value="false" />
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<!-- 将请求和会话属性作为变量暴露给FreeMarker模板使用。要做到这一点，可以设置exposeRequestAttributes或者exposeSessionAttributes为true -->
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<!-- 使用这些宏，必须设置FreeMarkerViewResolver的exposeMacroHelpers属性为true -->
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="requestContextAttribute" value="rca" />
	</bean>


	<!-- 异常处理 -->
	<!-- <bean class="com.ylink.inetpay.portal.shie.web.controller.exception.ExceptionResolver"> 
		视图名称 <property name="exceptionMappings"> <props> <prop key="org.ylinkpay.framework.core.exception.BusinessRuntimeException"> 
		exception/bussinessException </prop> </props> </property> <property name="defaultErrorView" 
		value="/exception/error" /> </bean> -->


	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为6MB -->
		<property name="maxUploadSize">
			<value>6291456</value>
		</property>
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
	</bean>

	<!-- 定义首页 -->
	<mvc:view-controller path="/" view-name="/index.html" />

</beans>
